{"version":3,"sources":["App.js","index.js"],"names":["App","useState","state0","setState0","state1","setState1","state2","setState2","state3","setState3","state4","setState4","state5","setState5","state6","setState6","state7","setState7","state8","setState8","toggle","id","console","log","Provider","value","color","size","className","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAgJeA,MAzIf,WACE,MAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,oBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA4BJ,oBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAA4BN,oBAAS,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAA4BR,oBAAS,GAArC,mBAAOS,EAAP,KAAeC,EAAf,KACA,EAA4BV,oBAAS,GAArC,mBAAOW,EAAP,KAAeC,EAAf,KACA,EAA4BZ,oBAAS,GAArC,mBAAOa,EAAP,KAAeC,EAAf,KACA,EAA4Bd,oBAAS,GAArC,mBAAOe,EAAP,KAAeC,EAAf,KACA,EAA4BhB,oBAAS,GAArC,mBAAOiB,EAAP,KAAeC,EAAf,KAEMC,EAAS,SAACC,GACdC,QAAQC,IAAI,QAASF,GACV,IAAPA,GAEAlB,GADED,GAMK,IAAPmB,GAEAhB,GADED,GAMK,IAAPiB,GAEAd,GADED,GAMK,IAAPe,GAEAZ,GADED,GAMK,IAAPa,GAEAV,GADED,GAMK,IAAPW,GAEAR,GADED,GAMK,IAAPS,GAEAN,GADED,GAMK,IAAPO,GAEAJ,GADED,GAMK,IAAPK,GAEAF,GADED,IAQR,OACE,cAAC,IAAYM,SAAb,CAAsBC,MAAO,CAAEC,MAAO,OAAQC,KAAM,QAApD,SACE,sBAAKC,UAAU,SAAf,UACE,sBAAKA,UAAU,QAAf,UACE,8BACE,wBAAQC,QAAS,kBAAMT,EAAO,IAA9B,SACGlB,EAAS,cAAC,IAAD,IAAc,cAAC,IAAD,QAG5B,8BACE,wBAAQ2B,QAAS,kBAAMT,EAAO,IAA9B,SACGhB,EAAS,cAAC,IAAD,IAAc,cAAC,IAAD,QAG5B,8BACE,wBAAQyB,QAAS,kBAAMT,EAAO,IAA9B,SACGd,EAAS,cAAC,IAAD,IAAc,cAAC,IAAD,WAI9B,sBAAKsB,UAAU,QAAf,UACE,gCACE,wBAAQC,QAAS,kBAAMT,EAAO,IAA9B,SACGZ,EAAS,cAAC,IAAD,IAAc,cAAC,IAAD,MAChB,OAEZ,gCACE,wBAAQqB,QAAS,kBAAMT,EAAO,IAA9B,SACGV,EAAS,cAAC,IAAD,IAAc,cAAC,IAAD,MAChB,OAEZ,gCACE,wBAAQmB,QAAS,kBAAMT,EAAO,IAA9B,SACGR,EAAS,cAAC,IAAD,IAAc,cAAC,IAAD,MAChB,UAGd,sBAAKgB,UAAU,QAAf,UACE,gCACE,wBAAQC,QAAS,kBAAMT,EAAO,IAA9B,SACGN,EAAS,cAAC,IAAD,IAAc,cAAC,IAAD,MAChB,OAEZ,gCACE,wBAAQe,QAAS,kBAAMT,EAAO,IAA9B,SACGJ,EAAS,cAAC,IAAD,IAAc,cAAC,IAAD,MAChB,OAEZ,gCACE,wBAAQa,QAAS,kBAAMT,EAAO,IAA9B,SACGF,EAAS,cAAC,IAAD,IAAc,cAAC,IAAD,MAChB,gBCpItBY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.35410443.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { IconContext } from \"react-icons\";\nimport { ImCross } from \"react-icons/im\";\nimport { MdExposureZero } from \"react-icons/md\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [state0, setState0] = useState(true);\n  const [state1, setState1] = useState(true);\n  const [state2, setState2] = useState(true);\n  const [state3, setState3] = useState(true);\n  const [state4, setState4] = useState(true);\n  const [state5, setState5] = useState(true);\n  const [state6, setState6] = useState(true);\n  const [state7, setState7] = useState(true);\n  const [state8, setState8] = useState(true);\n\n  const toggle = (id) => {\n    console.log(\"id =>\", id);\n    if (id === 1) {\n      if (state0) {\n        setState0(false);\n      } else {\n        setState0(true);\n      }\n    }\n    if (id === 2) {\n      if (state1) {\n        setState1(false);\n      } else {\n        setState1(true);\n      }\n    }\n    if (id === 3) {\n      if (state2) {\n        setState2(false);\n      } else {\n        setState2(true);\n      }\n    }\n    if (id === 4) {\n      if (state3) {\n        setState3(false);\n      } else {\n        setState3(true);\n      }\n    }\n    if (id === 5) {\n      if (state4) {\n        setState4(false);\n      } else {\n        setState4(true);\n      }\n    }\n    if (id === 6) {\n      if (state5) {\n        setState5(false);\n      } else {\n        setState5(true);\n      }\n    }\n    if (id === 7) {\n      if (state6) {\n        setState6(false);\n      } else {\n        setState6(true);\n      }\n    }\n    if (id === 8) {\n      if (state7) {\n        setState7(false);\n      } else {\n        setState7(true);\n      }\n    }\n    if (id === 9) {\n      if (state8) {\n        setState8(false);\n      } else {\n        setState8(true);\n      }\n    }\n  };\n\n  return (\n    <IconContext.Provider value={{ color: \"blue\", size: \"5rem\" }}>\n      <div className=\"tictac\">\n        <div className=\"row-1\">\n          <div>\n            <button onClick={() => toggle(1)}>\n              {state0 ? <ImCross /> : <MdExposureZero />}\n            </button>\n          </div>\n          <div>\n            <button onClick={() => toggle(2)}>\n              {state1 ? <ImCross /> : <MdExposureZero />}\n            </button>\n          </div>\n          <div>\n            <button onClick={() => toggle(3)}>\n              {state2 ? <ImCross /> : <MdExposureZero />}\n            </button>\n          </div>\n        </div>\n        <div className=\"row-2\">\n          <div>\n            <button onClick={() => toggle(4)}>\n              {state3 ? <ImCross /> : <MdExposureZero />}\n            </button>{\" \"}\n          </div>\n          <div>\n            <button onClick={() => toggle(5)}>\n              {state4 ? <ImCross /> : <MdExposureZero />}\n            </button>{\" \"}\n          </div>\n          <div>\n            <button onClick={() => toggle(6)}>\n              {state5 ? <ImCross /> : <MdExposureZero />}\n            </button>{\" \"}\n          </div>\n        </div>\n        <div className=\"row-3\">\n          <div>\n            <button onClick={() => toggle(7)}>\n              {state6 ? <ImCross /> : <MdExposureZero />}\n            </button>{\" \"}\n          </div>\n          <div>\n            <button onClick={() => toggle(8)}>\n              {state7 ? <ImCross /> : <MdExposureZero />}\n            </button>{\" \"}\n          </div>\n          <div>\n            <button onClick={() => toggle(9)}>\n              {state8 ? <ImCross /> : <MdExposureZero />}\n            </button>{\" \"}\n          </div>\n        </div>\n      </div>\n    </IconContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}