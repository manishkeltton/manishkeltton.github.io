{"version":3,"sources":["App.js","index.js"],"names":["count","storage","username","id","App","useState","values","setValues","isSubmit","setIsSubmit","store","setStore","className","onSubmit","e","preventDefault","console","log","type","name","value","onChange","target","map","stores","onClick","st","filter","stored","deletes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAGIA,EAAQ,EACRC,EAAU,CAAC,CAAEC,SAAU,GAAIC,GAAIH,IA2EpBI,MAzEf,WACE,MAA4BC,mBAAS,CACnCH,SAAU,KADZ,mBAAOI,EAAP,KAAeC,EAAf,KAIA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAoCA,OACE,sBAAKC,UAAU,YAAf,UACE,2CACA,8BACE,uBAAMC,SAjCK,SAACC,GAChBd,IACAc,EAAEC,iBACFC,QAAQC,IAAIP,GACZT,EAAO,sBAAOA,GAAP,CAAgB,CAAEC,SAAUI,EAAOJ,SAAUC,GAAIH,KACxDgB,QAAQC,IAAIhB,GACZU,EAASV,GACTQ,GAAY,GACZO,QAAQC,IAAIX,EAAOJ,UACnBK,EAAU,CAAEL,SAAU,MAwBlB,UACE,uBACEgB,KAAK,OACLC,KAAK,WACLC,MAAOd,EAAOJ,SACdmB,SA3CW,SAACP,GACpB,MAAwBA,EAAEQ,OAAlBH,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdb,EAAU,2BAAKD,GAAN,kBAAea,EAAOC,QA2CzB,wBAAQF,KAAK,SAAb,yBAGJ,6BACGV,GACCE,EAAMa,KAAI,SAACC,GACT,OACE,8BAAyB,IAAnBA,EAAOtB,UACX,+BACG,6BAAwB,IAAnBsB,EAAOtB,SAAiBsB,EAAOtB,SAAW,OAC/C,qBAAIuB,QAAS,kBAtCd,SAACtB,GACfa,QAAQC,IAAI,QAASd,GACrB,IAMMuB,EAAKhB,EAAMiB,QANC,SAACC,GACjB,GAAIA,EAAOzB,IAAMA,EAEf,OADAa,QAAQC,IAAI,eAAgBW,EAAOzB,KAC5B,KAIXa,QAAQC,IAAI,WAAYS,GACxBf,EAASe,GA4ByBG,CAAQL,EAAOrB,KAAlC,cAA4D,IAAnBqB,EAAOtB,SAAiB,SAAW,sBChE/F4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2baf4521.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nlet count = 0;\nlet storage = [{ username: \"\", id: count }];\n\nfunction App() {\n  const [values, setValues] = useState({\n    username: \"\",\n  });\n\n  const [isSubmit, setIsSubmit] = useState(false);\n  const [store, setStore] = useState([]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const onsubmit = (e) => {\n    count++;\n    e.preventDefault();\n    console.log(store);\n    storage = [...storage, { username: values.username, id: count }];\n    console.log(storage);\n    setStore(storage);\n    setIsSubmit(true);\n    console.log(values.username);\n    setValues({ username: \"\" });\n  };\n\n  const deletes = (id) => {\n    console.log(\"id =>\", id);\n    const filterVal = (stored) => {\n      if (stored.id != id) {\n        console.log(\"stored id =>\", stored.id);\n        return true;\n      }\n    };\n    const st = store.filter(filterVal);\n    console.log(\"store =>\", st);\n    setStore(st);\n    // for (let i = 0; i < store.length; i++) {\n    //   if (store[i].id == id) {\n    //     delete store[i];\n    //   }\n    // }\n  };\n  return (\n    <div className=\"container\">\n      <h1>Todo List</h1>\n      <div>\n        <form onSubmit={onsubmit}>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={values.username}\n            onChange={handleChange}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n      <ul>\n        {isSubmit &&\n          store.map((stores) => {\n            return ( \n              <div>{stores.username != \"\" &&\n                <li>\n                   <h1>{stores.username != \"\" ? stores.username : null}</h1>\n                   <h1 onClick={() => deletes(stores.id)}> {stores.username != \"\" ? \"Delete\" : null}</h1>\n                </li>}\n              </div>\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}